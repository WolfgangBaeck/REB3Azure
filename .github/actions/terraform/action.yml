name: 'Run Terraform'
description: 'Execute Terraform for an input client folder.'
inputs:
  working-folder:
    description: 'Client folder to work on'
    required: 'true'

defaults:
  run:
    shell: bash
runs:
  using: 'composite'
  steps:
  - name: set working folder
    run: cd ${{inputs.working-folder}}
  # Install the preferred version of Terraform CLI 
  - name: Setup Terraform
    uses: hashicorp/setup-terraform@v2
    with:
      terraform_version: 1.1.7

  ### Replace tokens in any .tf and .tfvars files
  - name: Replace tokens
    uses: cschleiden/replace-tokens@v1.2
    with:
      tokenPrefix: '#{'
      tokenSuffix: '}#'
      files: '["${{ inputs.working-folder}}/*.tf"]'
    env:
      CDN: http://christianbaeck.com
      CALLBACK: somevalue

  # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
  - name: Terraform Init
    id: init
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    run: |
      cd ${{ inputs.working-folder}}
      terraform init 

    # On push to main, build or change infrastructure according to Terraform configuration files
  - name: Terraform Plan
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
    run: |
      cd ${{ inputs.working-folder}}
      terraform plan -no-color